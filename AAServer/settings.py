"""
Django settings for AAServer project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from typing import List, Tuple

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7zmd#i(syq01ljcbdlcv0j83&3y0r2uo$8c4a(5*rsir*inm5)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    # 'django.contrib.admin',
    # 'django.contrib.auth',
    # 'django.contrib.contenttypes',
    # 'django.contrib.sessions',
    # 'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',  # 注册rest应用
    'rest_framework.authtoken',
    'django_minio_backend',  # MinIO存储后端

    # Project Apps
    'apps.auth.apps.AuthConfig',
    'apps.resource.apps.ResourceConfig',
    'apps.permission.apps.PermissionConfig',
    'apps.user.apps.UserConfig'
]

MIDDLEWARE = [
    'AAServer.common.middleware.GlobalRequestMiddleware',
    # 'AAServer.common.middleware.CurrentUserMiddleware',
    'AAServer.common.middleware.CorsMiddleware',  # 跨域中间件
    'django.middleware.security.SecurityMiddleware',
    # 'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    # 'django.contrib.auth.middleware.AuthenticationMiddleware',
    # 'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware'
]

ROOT_URLCONF = 'AAServer.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': []
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

STATIC_URL = '/static/'

# 修改时间
# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Shanghai'
USE_I18N = True
USE_L10N = True
# USE_TZ = True
USE_TZ = False

# 语言修改
LANGUAGE_CODE = 'zh-Hans'  # en-us为英文

WSGI_APPLICATION = 'AAServer.wsgi.application'

APPEND_SLASH = False  # 去掉url尾部斜杠

# DRF全局配置
REST_FRAMEWORK = {
    "UNAUTHENTICATED_USER": None,  # 配置匿名用户
    # "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "DEFAULT_PAGINATION_CLASS": "AAServer.common.pagination.CwsPageNumberPagination",
    "PAGE_SIZE": 10,
    "DATETIME_FORMAT": "%Y-%m-%d %H:%M:%S",
    "DEFAULT_RENDERER_CLASSES": [
        "AAServer.common.renderers.NumToStrJSONRenderer",
        # "rest_framework.renderers.JSONRenderer",
        # "rest_framework.renderers.BrowsableAPIRenderer",
    ],
    # 解析Request.data
    "DEFAULT_PARSER_CLASSES": [
        "rest_framework.parsers.JSONParser",
        "rest_framework.parsers.FormParser",
        "rest_framework.parsers.MultiPartParser",
    ],
    # 视图缓存（需配置Redis/Memcached）
    'DEFAULT_CACHE_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_CACHE_TIMEOUT': 60 * 15,  # 15分钟
    "DEFAULT_AUTHENTICATION_CLASSES": [
        # "rest_framework.authentication.SessionAuthentication",
        # "rest_framework.authentication.TokenAuthentication",
        # "rest_framework.authentication.BasicAuthentication",
        "AAServer.common.authentication.RedisTokenAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
    "EXCEPTION_HANDLER": "AAServer.common.exception_handler.common_exception_handler",
}

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'eaa_db',
        'USER': 'agent_dev',
        'PASSWORD': 'dev123',
        'HOST': '117.72.32.59',
        'PORT': '3306',
    }
}

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://117.72.32.59:6379/10",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "COMPRESSOR": "django_redis.compressors.zlib.ZlibCompressor",
            'SERIALIZER': 'django_redis.serializers.json.JSONSerializer',
            "PASSWORD": "guqier6379"
        },
        "KEY_PREFIX": "EAA",  # 设置缓存key的前缀
        "VERSION": 1  # 缓存版本

    }
}

STORAGES = {  # -- ADDED IN Django 5.1
    "default": {
        "BACKEND": "django_minio_backend.models.MinioBackend",
    },
    "staticfiles": {  # -- OPTIONAL
        "BACKEND": "django_minio_backend.models.MinioBackendStatic",
    },
}

# ------------ MINIO ----------------

MINIO_ENDPOINT = '123.56.190.241:9000'
MINIO_ACCESS_KEY = 'Lm4RvLqsiqR2gBGVJZBX'
MINIO_SECRET_KEY = 'ywIO4Lymr5mskdZfoVJJddPjp2dH34T8XRcW1mY5'
MINIO_USE_HTTPS = False
MINIO_PUBLIC_BUCKETS = [
    'eaa',
]
MINIO_POLICY_HOOKS: List[Tuple[str, dict]] = []
MINIO_MEDIA_FILES_BUCKET = 'eaa'  # replacement for MEDIA_ROOT
# MINIO_STATIC_FILES_BUCKET = 'eaa'  # replacement for STATIC_ROOT
MINIO_BUCKET_CHECK_ON_SAVE = True  # Default: True // Creates bucket if missing, then save

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'auth.User'
